#! /usr/bin/env bash
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

if [ $# -lt 2 ]; then
  echo 1>&2 "$0: not enough arguments"
  echo 1>&2 "Usage: launch path_to_joblog_json command"
  exit 2
elif [ $# -gt 2 ]; then
  echo 1>&2 "$0: too many arguments"
  echo 1>&2 "Usage: launch path_to_joblog_json command"
  exit 2
fi

joblog_json=$1
cmd=$2

if [ ! -f "$joblog_json" ]; then
  echo "[]" >"$joblog_json"
fi

tmppipe=$(mktemp)
exitCode=0
echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
[[ ! -z "$curlib" ]] && liblist -c "$curlib"
[[ ! -z "$preUsrlibl" ]] && liblist -af $preUsrlibl
[[ ! -z "$postUsrlibl" ]] && liblist -al $postUsrlibl

if [ ! -z "$tmpCurlib" ]; then
  echo ">> Temporarily set curlib to $tmpCurlib"
  (liblist -d "$curlib" && liblist -af "$curlib") || true
  liblist -c "$tmpCurlib"
fi

IFS=$'\\n'
echo "$IBMiEnvCmd"
if [ ! -z "$IBMiEnvCmd" ]; then
  for envcmd in $IBMiEnvCmd; do
    [[ ! -z "$envcmd" ]] && cl "$envcmd"
  done
fi

getjobid -s >"$tmppipe"
jobid=$(cat <"$tmppipe")
rm -rf "$tmppipe"
if [ -z "${BOBTEST}" ]; then
  cl "CHGJOB LOG(4 00 *SECLVL)"
  echo ">> executing command: ${cmd}"
  echo ">> liblist: $(liblist | awk '{print $1}' | sed ':a;N;$!ba;s/\n/ /g')"
  timestamp=$(date +"%Y-%m-%d-%H.%M.%S.%N")
  echo ">> executing time: ${timestamp}"
  echo
  cl "$cmd"
  exitCode=$?
  echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
  echo
  "$SCRIPT_DIR"/getJobLog "$cmd" "$timestamp" "$jobid" -f "$joblog_json"
else
  echo "$(liblist | awk '{print $1}' | sed ':a;N;$!ba;s/\n/ /g')"
  echo "$cmd"
fi
exit $exitCode
